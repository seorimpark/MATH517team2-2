5+3
install.packages("tseries")
labrary(tseries)
library(tseries)
install.packages("lattice")
library(lattice)
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
q()
install.packages("rmarkdown", dependencies = TRUE)
install.packages("rlang")
install.packages("tinytex", dependencies = TRUE)
install.packages("rmarkdown", dependencies = TRUE)
install.packages("installr")
library(installr)
updateR()
library(readr)
library(dplyr) # Useful for reading variables containing spaces
library(ggplot2)
library(reshape)
data = read_csv("C:/Users/Fahim Beck/Desktop/MATH517team2/Data/Provisional_COVID-19_Deaths_by_Place_of_Death_and_Age.csv")
---
title: "risk_factors"
output: html_document
runtime: shiny
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
inputPanel(
selectInput("n_breaks", label = "Number of bins:",
choices = c(10, 20, 35, 50), selected = 20),
sliderInput("bw_adjust", label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
)
renderPlot({
hist(faithful$eruptions, probability = TRUE, breaks = as.numeric(input$n_breaks),
xlab = "Duration (minutes)", main = "Geyser eruption duration")
dens <- density(faithful$eruptions, adjust = input$bw_adjust)
lines(dens, col = "blue")
})
knitr::opts_chunk$set(echo = TRUE)
shiny::runApp('C:/Users/Fahim Beck/Desktop/MATH517team2/Markdown/Risk_factors')
runApp('C:/Users/Fahim Beck/Desktop/MATH517team2/Markdown/first')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
shiny::runApp('C:/Users/Fahim Beck/Desktop/MATH517team2/Interactive Geographic Map Shiny')
runApp('C:/Users/Fahim Beck/Desktop/MATH517team2/Interactive Geographic Map Shiny')
Sys.time()
library(shiny); runApp('C:/Users/Fahim Beck/Desktop/MATH517team2/Interactive Barplot V2/barplot_app.R')
runApp('C:/Users/Fahim Beck/Desktop/MATH517team2/Interactive Barplot V2/barplot_app.R')
runApp('C:/Users/Fahim Beck/Desktop/MATH517team2/Interactive Barplot V2/barplot_app.R')
shiny::runApp('C:/Users/Fahim Beck/Desktop/MATH517team2/Interactive Geographic Map Shiny')
runApp('C:/Users/Fahim Beck/Desktop/MATH517team2/Interactive Geographic Map Shiny')
runApp('C:/Users/Fahim Beck/Desktop/MATH517team2/Interactive Geographic Map Shiny')
install_github("ficonsulting/RInno")
install.packages("remotes"); require(remotes)
install_github("ficonsulting/RInno")
library(devtools)
install_github("ficonsulting/RInno")
git_branch_default()
use_git()
git_default_branch()
use_git()
# Use install_github to get RInno
install_github("ficonsulting/RInno")
require(remotes)
# Use install_github to get RInno
install_github("ficonsulting/RInno")
require(RInno)
create_app(app_name = "barplot", app_dir = "app")
install.packages(c("sourcetools", "shiny"))
install.packages('httpuv', type='binary')
install.packages('shiny', type='binary')
shiny::runApp('C:/Users/Fahim Beck/Desktop/MATH517team2-2/Code/app')
shiny::runApp('C:/Users/Fahim Beck/Desktop/MATH517team2-2/Code/app')
install.packages('shiny')
shiny::runApp('C:/Users/Fahim Beck/Desktop/MATH517team2-2/Code/app')
shiny::runApp('C:/Users/Fahim Beck/Desktop/MATH517team2-2/Code/app')
update.packages(checkBuilt=TRUE)
shiny::runApp('C:/Users/Fahim Beck/Desktop/MATH517team2-2/Code/app')
setwd("C:/Users/Fahim Beck/Desktop/MATH517team2-2/Code")
setwd("C:/Users/Fahim Beck/Desktop/MATH517team2-2/Report")
library(ggplot2)
library(tidyr)
library(dplyr)
library(corrplot)
# Read data
load("data_train_DF.RData")
setwd("C:/Users/Fahim Beck/Desktop/MATH517team2-2/Code")
# Read data
load("data_train_DF.RData")
library(ggplot2)
library(tidyr)
library(dplyr)
library(corrplot)
# Read data
load("data_train_DF.RData")
data = data_train_DF
# Explore data
dim(data)
names(data)
# Remove NA values from CNT and BA
data <- data[!is.na(data$CNT),]
data <- data[!is.na(data$BA),]
# Remove columns not related to weather
remove = c(paste("lc", seq(1:18), sep = ""), "altiMean", "altiSD")
data = data[, -which(names(data) %in% remove)]
# Renaming weather columns
data<-data%>% dplyr::rename(NSwind=clim1, WEwind=clim2, dew_temperature=clim3, temperature=clim4,
potential_evaporation=clim5, solar_radiation= clim6,
thermal_radiation=clim7, pressure=clim8, evaporation=clim9,
precipitation=clim10)
# Wind into one component
data <- data %>% mutate(Wspeed=(sqrt(NSwind^2+WEwind^2))) %>% select(-NSwind, -WEwind)
# Temperatures in Celsius
data$dew_temperature = data$dew_temperature - 273.15
data$temperature = data$temperature - 273.15
# Overview
names(data)
sapply(data, range)
head(data)
# Parameters for sub-setting
lim_CNT = 60
lim_BA = 5000
# Subset and check
selection = data[data$CNT >= lim_CNT & data$BA >= lim_BA,]
dim(selection)
names(selection)
range(selection$year)
range(selection$month)
# Correlations
sel = cor(selection)
# Plot
dev.new(width=5, height=4)
# Plot
dev.new(width=5, height=4)
corrplot(sel, method = "color", addCoef.col="black", tl.cex = 0.8, number.digits = 2,
number.cex = 0.6)
# Finding considered areas
loc = unique( selection[, c("lon", "lat", "area")] )
us <- map_data('state')
# Plot areas
ggplot() +
geom_map(data=us, map=us, aes(x=long, y=lat, map_id=region),
fill="white", color="black", size=0.15) +
geom_point(data=loc, aes(x=lon, y=lat, size=area*2.7), colour="red", shape=15) +
scale_size_identity() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
plot.title = element_text(size=20, hjust=0.5, vjust=2)) +
ggtitle('Areas considered in the subset') +
coord_fixed(1.3)
dim(selection)
names(selection)
corrplot(sel, method = "color", addCoef.col="black", tl.cex = 0.8, number.digits = 2,
number.cex = 0.6)
plot(selection$month, selection$CNT)
plot(selection$potential_evaporation, selection$CNT)
library(shiny); runApp('C:/Users/Fahim Beck/Desktop/MATH517team2-2/Meteorological factors app/wildfires_mfactors.R')
sapply(data, range)
runApp('C:/Users/Fahim Beck/Desktop/MATH517team2-2/Meteorological factors app/wildfires_mfactors.R')
runApp('C:/Users/Fahim Beck/Desktop/MATH517team2-2/Meteorological factors app/wildfires_mfactors.R')
runApp('C:/Users/Fahim Beck/Desktop/MATH517team2-2/Meteorological factors app/wildfires_mfactors.R')
runApp('C:/Users/Fahim Beck/Desktop/MATH517team2-2/Meteorological factors app/wildfires_mfactors.R')
runApp('C:/Users/Fahim Beck/Desktop/MATH517team2-2/Meteorological factors app/wildfires_mfactors.R')
runApp('C:/Users/Fahim Beck/Desktop/MATH517team2-2/Meteorological factors app/wildfires_mfactors.R')
runApp('C:/Users/Fahim Beck/Desktop/MATH517team2-2/Meteorological factors app/wildfires_mfactors.R')
library(shiny); runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
?cor
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
"Subset period : " + "1993" + " - " + "2015."
paste("Subset period : " , "1993" , " - " , "2015.")
paste("Subset period:" , "1993" , "-" , "2015.")
paste("Subset period:" , "1993" , "to" , "2015.")
paste("Subset period:" , "1993" , "to" , "2015")
runApp('wildfires_mfactors.R')
# Subset and check
selection = data[data$CNT >= lim_CNT & data$BA >= lim_BA,]
dim(selection)
names(selection)
range(selection$year)
range(selection$month)
lim_CNT=100
lim_BA=10000
# Subset and check
selection = data[data$CNT >= lim_CNT & data$BA >= lim_BA,]
dim(selection)
names(selection)
range(selection$year)
selection
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
us <- map_data('state')
us
range(us$long)
range(us$lat)
range(us$subregion)
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
runApp('wildfires_mfactors.R')
